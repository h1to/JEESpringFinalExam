package kz.iitu.itse1908.murzaliev.controller;

import kz.iitu.itse1908.murzaliev.entity.*;
import kz.iitu.itse1908.murzaliev.service.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpEntity;
import org.springframework.http.ResponseEntity;

import java.util.List;

import static org.mockito.Mockito.*;

class TeacherControllerTest {
    @Mock
    DepartmentService departmentService;
    @Mock
    DegreeService degreeService;
    @Mock
    DisciplineService disciplineService;
    @Mock
    SpecialityService specialityService;
    @Mock
    FacultyService facultyService;
    @Mock
    RoleService roleService;
    @Mock
    UserService userService;
    @Mock
    StudentService studentService;
    @Mock
    TeacherService teacherService;
    @Mock
    GradesService gradesService;
    @InjectMocks
    TeacherController teacherController;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testGetHeader() {
        HttpEntity<String> result = teacherController.getHeader();
        Assertions.assertEquals(null, result);
    }

    @Test
    void testCollectionOptions() {
        ResponseEntity<?> result = teacherController.collectionOptions();
        Assertions.assertEquals(null, result);
    }

    @Test
    void testDefaultP() {
        when(userService.getByEmail(anyString())).thenReturn(new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL));
        when(teacherService.getByUser(anyLong())).thenReturn(new Teacher(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Faculty(Long.valueOf(1), "name"), "name"));

        ResponseEntity<String> result = teacherController.defaultP();
        Assertions.assertEquals(null, result);
    }

    @Test
    void testGradeStudent() {
        when(userService.getByEmail(anyString())).thenReturn(new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL));
        when(teacherService.getByUser(anyLong())).thenReturn(new Teacher(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Faculty(Long.valueOf(1), "name"), "name"));
        when(gradesService.update(any())).thenReturn(0);
        when(gradesService.getGrades(anyLong(), anyLong())).thenReturn(new Grades(new Discipline(Long.valueOf(1), "name", List.of(new Student(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Degree(Long.valueOf(1), "name"), new Department(Long.valueOf(1), "name"), new Speciality(Long.valueOf(1), "name", new Faculty(Long.valueOf(1), "name")), Long.valueOf(1), Double.valueOf(0))), List.of(new Teacher(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Faculty(Long.valueOf(1), "name"), "name"))), new Student(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Degree(Long.valueOf(1), "name"), new Department(Long.valueOf(1), "name"), new Speciality(Long.valueOf(1), "name", new Faculty(Long.valueOf(1), "name")), Long.valueOf(1), Double.valueOf(0)), Long.valueOf(1), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0)));

        ResponseEntity<Grades> result = teacherController.gradeStudent(new Grades(new Discipline(Long.valueOf(1), "name", List.of(new Student(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Degree(Long.valueOf(1), "name"), new Department(Long.valueOf(1), "name"), new Speciality(Long.valueOf(1), "name", new Faculty(Long.valueOf(1), "name")), Long.valueOf(1), Double.valueOf(0))), List.of(new Teacher(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Faculty(Long.valueOf(1), "name"), "name"))), new Student(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Degree(Long.valueOf(1), "name"), new Department(Long.valueOf(1), "name"), new Speciality(Long.valueOf(1), "name", new Faculty(Long.valueOf(1), "name")), Long.valueOf(1), Double.valueOf(0)), Long.valueOf(1), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0)));
        Assertions.assertEquals(null, result);
    }

    @Test
    void testStudentGrades() {
        when(userService.getByEmail(anyString())).thenReturn(new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL));
        when(teacherService.getByUser(anyLong())).thenReturn(new Teacher(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Faculty(Long.valueOf(1), "name"), "name"));
        when(gradesService.getGrades(anyLong(), anyLong())).thenReturn(new Grades(new Discipline(Long.valueOf(1), "name", List.of(new Student(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Degree(Long.valueOf(1), "name"), new Department(Long.valueOf(1), "name"), new Speciality(Long.valueOf(1), "name", new Faculty(Long.valueOf(1), "name")), Long.valueOf(1), Double.valueOf(0))), List.of(new Teacher(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Faculty(Long.valueOf(1), "name"), "name"))), new Student(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Degree(Long.valueOf(1), "name"), new Department(Long.valueOf(1), "name"), new Speciality(Long.valueOf(1), "name", new Faculty(Long.valueOf(1), "name")), Long.valueOf(1), Double.valueOf(0)), Long.valueOf(1), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0), Double.valueOf(0)));

        ResponseEntity<Grades> result = teacherController.studentGrades(Long.valueOf(1), Long.valueOf(1));
        Assertions.assertEquals(null, result);
    }

    @Test
    void testGetStudents() {
        when(disciplineService.getStudents(anyLong())).thenReturn(List.of(new Student(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Degree(Long.valueOf(1), "name"), new Department(Long.valueOf(1), "name"), new Speciality(Long.valueOf(1), "name", new Faculty(Long.valueOf(1), "name")), Long.valueOf(1), Double.valueOf(0))));
        when(userService.getByEmail(anyString())).thenReturn(new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL));
        when(teacherService.getByUser(anyLong())).thenReturn(new Teacher(Long.valueOf(1), new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), new Role(Long.valueOf(1), "name"), "email", "password", Boolean.TRUE, new User(Long.valueOf(1), null, "email", "password", Boolean.TRUE, null.kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL).kz.iitu.itse1908.murzaliev.entity.User.Provider.LOCAL), new Faculty(Long.valueOf(1), "name"), "name"));

        ResponseEntity<List<Student>> result = teacherController.getStudents(Long.valueOf(1));
        Assertions.assertEquals(null, result);
    }
}

//Generated with love by TestMe :) Please report issues and submit feature requests at: http://weirddev.com/forum#!/testme